{"ast":null,"code":"import { Datepicker, ChartJs } from '../../../../functions';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../services/orders.service\";\nimport * as i2 from \"../../../../services/sales.service\";\nimport * as i3 from \"@angular/router\";\nfunction AccountMySalesComponent_tr_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 26);\n    i0.ɵɵtext(2, \"You haven't sales!\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AccountMySalesComponent_tr_82_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\")(5, \"a\", 27);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sale_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 8, sale_r1.sales.date));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"product/\", sale_r1.sales.url, \"\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(sale_r1.sales.product);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sale_r1.sales.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", sale_r1.sales.unit_price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", sale_r1.sales.commission, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"$\", sale_r1.sales.total, \"\");\n  }\n}\nexport let AccountMySalesComponent = /*#__PURE__*/(() => {\n  class AccountMySalesComponent {\n    constructor(ordersService, salesService, activatedRoute) {\n      this.ordersService = ordersService;\n      this.salesService = salesService;\n      this.activatedRoute = activatedRoute;\n      this.sales = [];\n      this.storeProfits = 0;\n      this.commissions = 0;\n      this.totalSales = 0;\n      this.graph = [];\n      this.dataDate = [];\n      this.dataProfit = [];\n      this.dateFrom = null;\n      this.dateTo = null;\n      this.dtOptions = {};\n      this.dtTrigger = new Subject();\n    }\n    ngOnInit() {\n      /*=============================================\n      Capturamos parámetros URL\n      =============================================*/\n      this.dateFrom = this.activatedRoute.snapshot.params[\"param\"].split(\"&\")[1];\n      this.dateTo = this.activatedRoute.snapshot.params[\"param\"].split(\"&\")[2];\n      /*=============================================\n      Agregamos opciones a DataTable\n      =============================================*/\n      this.dtOptions = {\n        pagingType: 'full_numbers',\n        processing: true\n      };\n      let load = 0;\n      /*=============================================\n      Preguntamos si esta tienda tiene órdenes\n      =============================================*/\n      this.ordersService.getFilterData(\"store\", this.childItem).subscribe(resp => {\n        if (Object.keys(resp).length > 0) {\n          for (const i in resp) {\n            /*=============================================\n            Traemos las ventas relacionadas a las órdenes\n            =============================================*/\n            this.salesService.getFilterData(\"id_order\", i).subscribe(resp2 => {\n              if (Object.keys(resp2).length > 0) {\n                for (const f in resp2) {\n                  load++;\n                  /*=============================================\n                  Agregamos al array principal de órdenes la propiedad \"sales\"\n                  =============================================*/\n                  resp[i].sales = resp2[f];\n                  /*=============================================\n                  Filtramos solo ventas finalizadas\n                  =============================================*/\n                  if (resp[i].sales.status == \"success\") {\n                    this.sales.push(resp[i]);\n                    /*=============================================\n                    Filtramos ventas por fechas\n                    =============================================*/\n                    if (this.dateFrom != null && this.dateTo != null) {\n                      this.sales = this.sales.filter(sale => sale.sales.date.substr(0, 10) >= this.dateFrom && sale.sales.date.substr(0, 10) <= this.dateTo);\n                    }\n                  }\n                  /*=============================================\n                  Configuramos información para la vista de ventas\n                  =============================================*/\n                  if (load == Object.keys(resp).length) {\n                    if (this.sales.length > 0) {\n                      this.sales.forEach((sale, index) => {\n                        this.storeProfits += Number(sale.sales.unit_price);\n                        this.commissions += Number(sale.sales.commission);\n                        this.totalSales += Number(sale.sales.total);\n                        /*=============================================\n                        Agrupamos los datos que mostraremos en el gráfico\n                        =============================================*/\n                        this.graph.push({\n                          \"date\": sale.sales.date.substr(0, 10),\n                          \"price\": sale.sales.unit_price\n                        });\n                      });\n                      /*=============================================\n                      Sumamos ventas realizadas en la misma fecha\n                      =============================================*/\n                      let graph = [];\n                      this.graph.reduce((res, value) => {\n                        if (!res[value.date]) {\n                          res[value.date] = {\n                            date: value.date,\n                            price: 0\n                          };\n                          graph.push(res[value.date]);\n                        }\n                        res[value.date].price += Number(value.price);\n                        return res;\n                      }, {});\n                      /*=============================================\n                      Ordenamos el arreglo en fecha de menor a mayor\n                      =============================================*/\n                      graph.sort((a, b) => {\n                        return new Date(a.date).getTime() - new Date(b.date).getTime();\n                      });\n                      /*=============================================\n                      Separamos fecha y precios\n                      =============================================*/\n                      graph.forEach((value, index) => {\n                        this.dataDate[index] = value.date;\n                        this.dataProfit[index] = value.price.toFixed(2);\n                      });\n                      /*=============================================\n                      Extraer el valor máximo de las ventas\n                      =============================================*/\n                      let max = Math.max(...this.dataProfit);\n                      /*=============================================\n                      Configuración de Chart JS\n                      =============================================*/\n                      let config = {\n                        type: 'line',\n                        data: {\n                          labels: this.dataDate,\n                          datasets: [{\n                            label: 'Sales',\n                            backgroundColor: 'rgba(0,255,255,.2)',\n                            borderColor: '#0cf',\n                            data: this.dataProfit,\n                            fill: true\n                          }]\n                        },\n                        options: {\n                          responsive: true,\n                          scales: {\n                            yAxes: [{\n                              ticks: {\n                                min: 0,\n                                max: Math.ceil(max / 1000) * 1000\n                              }\n                            }]\n                          }\n                        }\n                      };\n                      ChartJs.fnc(config);\n                      /*=============================================\n                      Disparamos el trigger de Datatable\n                      =============================================*/\n                      this.dtTrigger.next();\n                    }\n                  }\n                }\n              }\n            });\n          }\n        }\n      });\n      Datepicker.fnc();\n    }\n    /*=============================================\n    Destruímos el trigger de angular\n    =============================================*/\n    ngOnDestroy() {\n      this.dtTrigger.unsubscribe();\n    }\n    static {\n      this.ɵfac = function AccountMySalesComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AccountMySalesComponent)(i0.ɵɵdirectiveInject(i1.OrdersService), i0.ɵɵdirectiveInject(i2.SalesService), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AccountMySalesComponent,\n        selectors: [[\"app-account-my-sales\"]],\n        inputs: {\n          childItem: \"childItem\"\n        },\n        decls: 83,\n        vars: 9,\n        consts: [[1, \"ps-section__content\"], [1, \"ps-section__links\"], [\"href\", \"/account\"], [\"href\", \"/account/my-shopping\"], [\"href\", \"/account/my-store\"], [1, \"active\"], [\"href\", \"account/my-sales\"], [1, \"ps-form--vendor-datetimepicker\", \"mt-5\"], [1, \"row\"], [1, \"col-lg-3\", \"col-md-4\", \"col-sm-6\", \"col-12\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [\"id\", \"time-from\", 1, \"input-group-text\"], [\"type\", \"text\", \"aria-label\", \"Username\", \"aria-describedby\", \"time-from\", \"autocomplete\", \"off\", \"required\", \"\", 1, \"form-control\", \"ps-datepicker\", \"dateFrom\", 3, \"value\"], [\"id\", \"time-form\", 1, \"input-group-text\"], [\"type\", \"text\", \"aria-label\", \"Username\", \"aria-describedby\", \"time-to\", \"autocomplete\", \"off\", \"readonly\", \"\", \"required\", \"\", 1, \"form-control\", \"ps-datepicker\", \"dateTo\", 3, \"value\"], [\"href\", \"\", 1, \"ps-btn\", \"btnUpdate\"], [1, \"icon-sync2\"], [1, \"col-12\"], [1, \"ps-block--vendor-status\"], [1, \"table\", \"ps-table\", \"ps-table--vendor-status\"], [\"id\", \"line-chart\", 1, \"chartjs-render-monitor\"], [1, \"table-responsive\"], [\"datatable\", \"\", \"width\", \"100%\", 1, \"table\", \"ps-table\", \"ps-table--vendor\", 3, \"dtOptions\", \"dtTrigger\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"colspan\", \"6\", 1, \"text-center\"], [3, \"href\"]],\n        template: function AccountMySalesComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1)(2, \"li\")(3, \"a\", 2);\n            i0.ɵɵtext(4, \"My Wishlist\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"li\")(6, \"a\", 3);\n            i0.ɵɵtext(7, \"My Shopping\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(8, \"li\")(9, \"a\", 4);\n            i0.ɵɵtext(10, \"My Store\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(11, \"li\", 5)(12, \"a\", 6);\n            i0.ɵɵtext(13, \"My Sales\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(14, \"form\", 7)(15, \"div\", 8)(16, \"div\", 9)(17, \"div\", 10)(18, \"div\", 11)(19, \"span\", 12);\n            i0.ɵɵtext(20, \"From\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(21, \"input\", 13);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"div\", 9)(23, \"div\", 10)(24, \"div\", 11)(25, \"span\", 14);\n            i0.ɵɵtext(26, \"To\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelement(27, \"input\", 15);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(28, \"div\", 9)(29, \"a\", 16);\n            i0.ɵɵelement(30, \"i\", 17);\n            i0.ɵɵtext(31, \" Update\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(32, \"div\", 8)(33, \"div\", 18)(34, \"figure\", 19)(35, \"figcaption\");\n            i0.ɵɵtext(36, \"Total sales\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(37, \"table\", 20)(38, \"tbody\")(39, \"tr\")(40, \"td\");\n            i0.ɵɵtext(41, \"Store Profits\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(42, \"td\");\n            i0.ɵɵtext(43);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(44, \"tr\")(45, \"td\");\n            i0.ɵɵtext(46, \"Commissions\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(47, \"td\");\n            i0.ɵɵtext(48);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(49, \"tr\")(50, \"td\")(51, \"strong\");\n            i0.ɵɵtext(52, \"Total\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(53, \"td\");\n            i0.ɵɵtext(54);\n            i0.ɵɵelementEnd()()()()()();\n            i0.ɵɵelementStart(55, \"div\", 18)(56, \"figure\", 19)(57, \"figcaption\");\n            i0.ɵɵtext(58, \"Sales Graph\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(59, \"canvas\", 21);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(60, \"div\", 18)(61, \"figure\", 19)(62, \"figcaption\");\n            i0.ɵɵtext(63, \"Sales Table\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(64, \"div\", 22)(65, \"table\", 23)(66, \"thead\")(67, \"tr\")(68, \"th\");\n            i0.ɵɵtext(69, \"date\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(70, \"th\");\n            i0.ɵɵtext(71, \"Product\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(72, \"th\");\n            i0.ɵɵtext(73, \"Sold\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(74, \"th\");\n            i0.ɵɵtext(75, \"Price\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(76, \"th\");\n            i0.ɵɵtext(77, \"Commission\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(78, \"th\");\n            i0.ɵɵtext(79, \"Total\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(80, \"tbody\");\n            i0.ɵɵtemplate(81, AccountMySalesComponent_tr_81_Template, 3, 0, \"tr\", 24)(82, AccountMySalesComponent_tr_82_Template, 15, 10, \"tr\", 25);\n            i0.ɵɵelementEnd()()()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(21);\n            i0.ɵɵpropertyInterpolate(\"value\", ctx.dateFrom);\n            i0.ɵɵadvance(6);\n            i0.ɵɵpropertyInterpolate(\"value\", ctx.dateTo);\n            i0.ɵɵadvance(16);\n            i0.ɵɵtextInterpolate1(\"$\", ctx.storeProfits.toFixed(2), \"\");\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate1(\"$\", ctx.commissions.toFixed(2), \"\");\n            i0.ɵɵadvance(6);\n            i0.ɵɵtextInterpolate1(\"$\", ctx.totalSales.toFixed(2), \"\");\n            i0.ɵɵadvance(11);\n            i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions)(\"dtTrigger\", ctx.dtTrigger);\n            i0.ɵɵadvance(16);\n            i0.ɵɵproperty(\"ngIf\", ctx.sales.length == 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngForOf\", ctx.sales);\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return AccountMySalesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}