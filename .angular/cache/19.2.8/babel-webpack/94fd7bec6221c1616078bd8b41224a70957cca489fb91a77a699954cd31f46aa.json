{"ast":null,"code":"import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { Capitalize, Sweetalert } from '../../functions';\nimport { UsersModel } from '../../models/users.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/users.service\";\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1, \"Please fill out this field.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1, \"Please fill out this field.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1, \"Please fill out this field.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1, \"Please fill out this field.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵtext(1, \"Please fill out this field.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(usersService) {\n      this.usersService = usersService;\n      this.user = new UsersModel();\n    }\n    ngOnInit() {\n      /*=============================================\n      Validar formulario de Bootstrap 4\n      =============================================*/\n      // Disable form submissions if there are invalid fields\n      (function () {\n        'use strict';\n\n        window.addEventListener('load', function () {\n          // Get the forms we want to add validation styles to\n          var forms = document.getElementsByClassName('needs-validation');\n          // Loop over them and prevent submission\n          var validation = Array.prototype.filter.call(forms, function (form) {\n            form.addEventListener('submit', function (event) {\n              if (form.checkValidity() === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n              form.classList.add('was-validated');\n            }, false);\n          });\n        }, false);\n      })();\n    }\n    /*=============================================\n    Capitalizar la primera letra de nombre y apellido\n    =============================================*/\n    capitalize(input) {\n      input.value = Capitalize.fnc(input.value);\n    }\n    /*=============================================\n    Validación de expresión regular del formulario\n    =============================================*/\n    validate(input) {\n      let pattern;\n      if ($(input).attr(\"name\") == \"username\") {\n        pattern = /^[A-Za-z]{2,8}$/;\n        input.value = input.value.toLowerCase();\n        this.usersService.getFilterData(\"username\", input.value).subscribe(resp => {\n          if (Object.keys(resp).length > 0) {\n            $(input).parent().addClass('was-validated');\n            input.value = \"\";\n            Sweetalert.fnc(\"error\", \"Username already exists\", null);\n            return;\n          }\n        });\n      }\n      if ($(input).attr(\"name\") == \"password\") {\n        pattern = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{4,}$/;\n      }\n      if (!pattern.test(input.value)) {\n        $(input).parent().addClass('was-validated');\n        input.value = \"\";\n      }\n    }\n    /*=============================================\n    Envío del formulario\n    =============================================*/\n    onSubmit(f) {\n      if (f.invalid) {\n        return;\n      }\n      /*=============================================\n      Alerta suave mientras se registra el usuario\n      =============================================*/\n      Sweetalert.fnc(\"loading\", \"Loading...\", null);\n      /*=============================================\n      Registro en Firebase Authentication\n      =============================================*/\n      this.user.returnSecureToken = true;\n      this.usersService.registerAuth(this.user).subscribe(resp => {\n        if (resp[\"email\"] == this.user.email) {\n          /*=============================================\n           Enviar correo de verificación\n           =============================================*/\n          let body = {\n            requestType: \"VERIFY_EMAIL\",\n            idToken: resp[\"idToken\"]\n          };\n          this.usersService.sendEmailVerificationFnc(body).subscribe(resp => {\n            if (resp[\"email\"] == this.user.email) {\n              /*=============================================\n              Registro en Firebase Database\n              =============================================*/\n              this.user.displayName = `${this.user.first_name} ${this.user.last_name}`;\n              this.user.method = \"direct\";\n              this.user.needConfirm = false;\n              this.user.username = this.user.username.toLowerCase();\n              this.usersService.registerDatabase(this.user).subscribe(resp => {\n                Sweetalert.fnc(\"success\", \"Confirm your account in your email (check spam)\", \"login\");\n              });\n            }\n          });\n        }\n      }, err => {\n        Sweetalert.fnc(\"error\", err.error.error.message, null);\n      });\n    }\n    /*=============================================\n    Registro con Facebook\n    =============================================*/\n    facebookRegister() {\n      let localUsersService = this.usersService;\n      let localUser = this.user;\n      // https://firebase.google.com/docs/web/setup\n      // Crea una nueva APP en Settings\n      // npm install --save firebase\n      // Agregar import * as firebase from \"firebase/app\";\n      // import \"firebase/auth\";\n      /*=============================================\n      Inicializa Firebase en tu proyecto web\n      =============================================*/\n      // Your web app's Firebase configuration\n      const firebaseConfig = {\n        apiKey: \"api-key\",\n        authDomain: \"project-id.firebaseapp.com\",\n        databaseURL: \"https://project-id.firebaseio.com\",\n        projectId: \"project-id\",\n        storageBucket: \"project-id.appspot.com\",\n        messagingSenderId: \"sender-id\",\n        appID: \"app-id\"\n      };\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      //https://firebase.google.com/docs/auth/web/facebook-login\n      /*=============================================\n      Crea una instancia del objeto proveedor de Facebook\n      =============================================*/\n      var provider = new firebase.auth.FacebookAuthProvider();\n      /*=============================================\n      acceder con una ventana emergente y con certificado SSL (https)\n      =============================================*/\n      //ng serve --ssl true --ssl-cert \"/path/to/file.crt\" --ssl-key \"/path/to/file.key\"\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        registerFirebaseDatabase(result, localUser, localUsersService);\n      }).catch(function (error) {\n        var errorMessage = error.message;\n        Sweetalert.fnc(\"error\", errorMessage, \"register\");\n      });\n      /*=============================================\n      Registramos al usuario en Firebase Database\n      =============================================*/\n      function registerFirebaseDatabase(result, localUser, localUsersService) {\n        var user = result.user;\n        if (user.P) {\n          localUser.displayName = user.displayName;\n          localUser.email = user.email;\n          localUser.idToken = user.b.b.g;\n          localUser.method = \"facebook\";\n          localUser.username = user.email.split('@')[0];\n          localUser.picture = user.photoURL;\n          /*=============================================\n          Evitar que se dupliquen los registros en Firebase Database\n          =============================================*/\n          localUsersService.getFilterData(\"email\", user.email).subscribe(resp => {\n            if (Object.keys(resp).length > 0) {\n              Sweetalert.fnc(\"error\", `You're already signed in, please login with ${resp[Object.keys(resp)[0]].method} method`, \"login\");\n            } else {\n              localUsersService.registerDatabase(localUser).subscribe(resp => {\n                if (resp[\"name\"] != \"\") {\n                  Sweetalert.fnc(\"success\", \"Please Login with facebook\", \"login\");\n                }\n              });\n            }\n          });\n        }\n      }\n    }\n    /*=============================================\n    Registro con Google\n    =============================================*/\n    googleRegister() {\n      let localUsersService = this.usersService;\n      let localUser = this.user;\n      // https://firebase.google.com/docs/web/setup\n      // Crea una nueva APP en Settings\n      // npm install --save firebase\n      // Agregar import * as firebase from \"firebase/app\";\n      // import \"firebase/auth\";\n      /*=============================================\n      Inicializa Firebase en tu proyecto web\n      =============================================*/\n      // Your web app's Firebase configuration\n      const firebaseConfig = {\n        apiKey: \"api-key\",\n        authDomain: \"project-id.firebaseapp.com\",\n        databaseURL: \"https://project-id.firebaseio.com\",\n        projectId: \"project-id\",\n        storageBucket: \"project-id.appspot.com\",\n        messagingSenderId: \"sender-id\",\n        appID: \"app-id\"\n      };\n      // Initialize Firebase\n      firebase.initializeApp(firebaseConfig);\n      //https://firebase.google.com/docs/auth/web/google-signin\n      /*=============================================\n      Crea una instancia del objeto proveedor de Google\n      =============================================*/\n      var provider = new firebase.auth.GoogleAuthProvider();\n      /*=============================================\n      acceder con una ventana emergente\n      =============================================*/\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        registerFirebaseDatabase(result, localUser, localUsersService);\n      }).catch(function (error) {\n        var errorMessage = error.message;\n        Sweetalert.fnc(\"error\", errorMessage, \"register\");\n      });\n      /*=============================================\n      Registramos al usuario en Firebase Database\n      =============================================*/\n      function registerFirebaseDatabase(result, localUser, localUsersService) {\n        var user = result.user;\n        if (user.P) {\n          localUser.displayName = user.displayName;\n          localUser.email = user.email;\n          localUser.idToken = user.b.b.g;\n          localUser.method = \"google\";\n          localUser.username = user.email.split('@')[0];\n          localUser.picture = user.photoURL;\n          /*=============================================\n          Evitar que se dupliquen los registros en Firebase Database\n          =============================================*/\n          localUsersService.getFilterData(\"email\", user.email).subscribe(resp => {\n            if (Object.keys(resp).length > 0) {\n              Sweetalert.fnc(\"error\", `You're already signed in, please login with ${resp[Object.keys(resp)[0]].method} method`, \"login\");\n            } else {\n              localUsersService.registerDatabase(localUser).subscribe(resp => {\n                if (resp[\"name\"] != \"\") {\n                  Sweetalert.fnc(\"success\", \"Please Login with google\", \"login\");\n                }\n              });\n            }\n          });\n        }\n      }\n    }\n    static {\n      this.ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.UsersService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        decls: 68,\n        vars: 10,\n        consts: [[\"f\", \"ngForm\"], [\"first_name\", \"\"], [\"last_name\", \"\"], [\"username\", \"\"], [\"password\", \"\"], [1, \"ps-breadcrumb\"], [1, \"container\"], [1, \"breadcrumb\"], [\"href\", \"index.html\"], [1, \"ps-my-account\"], [\"novalidate\", \"\", 1, \"ps-form--account\", \"ps-tab-root\", \"needs-validation\", 3, \"ngSubmit\"], [1, \"ps-tab-list\"], [1, \"\"], [\"href\", \"login\"], [1, \"active\"], [\"href\", \"register\"], [1, \"ps-tabs\"], [\"id\", \"register\", 1, \"ps-tab\", \"active\"], [1, \"ps-form__content\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"First name\", \"name\", \"first_name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [1, \"valid-feedback\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Last name\", \"name\", \"last_name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"type\", \"email\", \"placeholder\", \"Email address\", \"name\", \"email\", \"email\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", \"minlength\", \"2\", \"maxlength\", \"8\", \"pattern\", \"[A-Za-z]{2,8}\", \"data-toggle\", \"tooltip\", \"title\", \"Enter your username with at least 2 characters, maximum 8 characters without using numbers\", 1, \"form-control\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"4\", \"pattern\", \"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{4,}\", \"data-toggle\", \"tooltip\", \"title\", \"Enter your password with at least 4 characters and must include uppercase, lowercase letters and numbers\", 1, \"form-control\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [1, \"form-group\", \"submtit\"], [1, \"ps-btn\", \"ps-btn--fullwidth\"], [1, \"ps-form__footer\"], [1, \"ps-list--social\"], [1, \"facebook\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"fab\", \"fa-facebook-f\"], [1, \"google\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"fab\", \"fa-google\"], [1, \"invalid-feedback\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"ul\", 7)(3, \"li\")(4, \"a\", 8);\n            i0.ɵɵtext(5, \"Home\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"li\");\n            i0.ɵɵtext(7, \"Register\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(8, \"div\", 9)(9, \"div\", 6)(10, \"form\", 10, 0);\n            i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const f_r2 = i0.ɵɵreference(11);\n              return i0.ɵɵresetView(ctx.onSubmit(f_r2));\n            });\n            i0.ɵɵelementStart(12, \"ul\", 11)(13, \"li\", 12)(14, \"p\")(15, \"a\", 13);\n            i0.ɵɵtext(16, \"Login\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(17, \"li\", 14)(18, \"p\")(19, \"a\", 15);\n            i0.ɵɵtext(20, \"Register\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(21, \"div\", 16)(22, \"div\", 17)(23, \"div\", 18)(24, \"h5\");\n            i0.ɵɵtext(25, \"Register An Account\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(26, \"div\", 19)(27, \"input\", 20, 1);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_27_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.user.first_name, $event) || (ctx.user.first_name = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵlistener(\"change\", function RegisterComponent_Template_input_change_27_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const first_name_r3 = i0.ɵɵreference(28);\n              return i0.ɵɵresetView(ctx.capitalize(first_name_r3));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(29, \"div\", 21);\n            i0.ɵɵtext(30, \"Valid.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 2, 0, \"div\", 22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(32, \"div\", 19)(33, \"input\", 23, 2);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_33_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.user.last_name, $event) || (ctx.user.last_name = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵlistener(\"change\", function RegisterComponent_Template_input_change_33_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const last_name_r4 = i0.ɵɵreference(34);\n              return i0.ɵɵresetView(ctx.capitalize(last_name_r4));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(35, \"div\", 21);\n            i0.ɵɵtext(36, \"Valid.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(37, RegisterComponent_div_37_Template, 2, 0, \"div\", 22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(38, \"div\", 19)(39, \"input\", 24);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_39_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.user.email, $event) || (ctx.user.email = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(40, \"div\", 21);\n            i0.ɵɵtext(41, \"Valid.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(42, RegisterComponent_div_42_Template, 2, 0, \"div\", 22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(43, \"div\", 19)(44, \"input\", 25, 3);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_44_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.user.username, $event) || (ctx.user.username = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵlistener(\"change\", function RegisterComponent_Template_input_change_44_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const username_r5 = i0.ɵɵreference(45);\n              return i0.ɵɵresetView(ctx.validate(username_r5));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(46, \"div\", 21);\n            i0.ɵɵtext(47, \"Valid.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(48, RegisterComponent_div_48_Template, 2, 0, \"div\", 22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(49, \"div\", 19)(50, \"input\", 26, 4);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_50_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              i0.ɵɵtwoWayBindingSet(ctx.user.password, $event) || (ctx.user.password = $event);\n              return i0.ɵɵresetView($event);\n            });\n            i0.ɵɵlistener(\"change\", function RegisterComponent_Template_input_change_50_listener() {\n              i0.ɵɵrestoreView(_r1);\n              const password_r6 = i0.ɵɵreference(51);\n              return i0.ɵɵresetView(ctx.validate(password_r6));\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(52, \"div\", 21);\n            i0.ɵɵtext(53, \"Valid.\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(54, RegisterComponent_div_54_Template, 2, 0, \"div\", 22);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(55, \"div\", 27)(56, \"button\", 28);\n            i0.ɵɵtext(57, \"Register\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(58, \"div\", 29)(59, \"p\");\n            i0.ɵɵtext(60, \"Connect with:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(61, \"ul\", 30)(62, \"li\")(63, \"a\", 31);\n            i0.ɵɵlistener(\"click\", function RegisterComponent_Template_a_click_63_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.facebookRegister());\n            });\n            i0.ɵɵelement(64, \"i\", 32);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(65, \"li\")(66, \"a\", 33);\n            i0.ɵɵlistener(\"click\", function RegisterComponent_Template_a_click_66_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.googleRegister());\n            });\n            i0.ɵɵelement(67, \"i\", 34);\n            i0.ɵɵelementEnd()()()()()()()()();\n          }\n          if (rf & 2) {\n            const f_r2 = i0.ɵɵreference(11);\n            i0.ɵɵadvance(27);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.first_name);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", f_r2.submitted && f_r2.controls[\"first_name\"].errors);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.last_name);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", f_r2.submitted && f_r2.controls[\"last_name\"].errors);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.email);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", f_r2.submitted && f_r2.controls[\"email\"].errors);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.username);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", f_r2.submitted && f_r2.controls[\"username\"].errors);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.user.password);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", f_r2.submitted && f_r2.controls[\"password\"].errors);\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}