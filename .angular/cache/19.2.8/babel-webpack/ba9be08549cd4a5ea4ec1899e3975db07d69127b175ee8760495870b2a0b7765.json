{"ast":null,"code":"/*=============================================\r\nOwlCarouselConfig\r\n=============================================*/\n\nexport let OwlCarouselConfig = {\n  fnc: function () {\n    var target = $('.owl-slider');\n    if (target.length > 0) {\n      target.each(function () {\n        var el = $(this),\n          dataAuto = el.data('owl-auto'),\n          dataLoop = el.data('owl-loop'),\n          dataSpeed = el.data('owl-speed'),\n          dataGap = el.data('owl-gap'),\n          dataNav = el.data('owl-nav'),\n          dataDots = el.data('owl-dots'),\n          dataAnimateIn = el.data('owl-animate-in') ? el.data('owl-animate-in') : '',\n          dataAnimateOut = el.data('owl-animate-out') ? el.data('owl-animate-out') : '',\n          dataDefaultItem = el.data('owl-item'),\n          dataItemXS = el.data('owl-item-xs'),\n          dataItemSM = el.data('owl-item-sm'),\n          dataItemMD = el.data('owl-item-md'),\n          dataItemLG = el.data('owl-item-lg'),\n          dataItemXL = el.data('owl-item-xl'),\n          dataNavLeft = el.data('owl-nav-left') ? el.data('owl-nav-left') : \"<i class='icon-chevron-left'></i>\",\n          dataNavRight = el.data('owl-nav-right') ? el.data('owl-nav-right') : \"<i class='icon-chevron-right'></i>\",\n          duration = el.data('owl-duration'),\n          datamouseDrag = el.data('owl-mousedrag') == 'on' ? true : false;\n        if (target.children('div, span, a, img, h1, h2, h3, h4, h5, h5').length >= 1) {\n          el.owlCarousel({\n            animateIn: dataAnimateIn,\n            animateOut: dataAnimateOut,\n            margin: dataGap,\n            autoplay: dataAuto,\n            autoplayTimeout: dataSpeed,\n            autoplayHoverPause: true,\n            loop: dataLoop,\n            nav: dataNav,\n            mouseDrag: datamouseDrag,\n            touchDrag: true,\n            autoplaySpeed: duration,\n            navSpeed: duration,\n            dotsSpeed: duration,\n            dragEndSpeed: duration,\n            navText: [dataNavLeft, dataNavRight],\n            dots: dataDots,\n            items: dataDefaultItem,\n            responsive: {\n              0: {\n                items: dataItemXS\n              },\n              480: {\n                items: dataItemSM\n              },\n              768: {\n                items: dataItemMD\n              },\n              992: {\n                items: dataItemLG\n              },\n              1200: {\n                items: dataItemXL\n              },\n              1680: {\n                items: dataDefaultItem\n              }\n            }\n          });\n        }\n      });\n    }\n  }\n};\n\n/*=============================================\r\nBackgroundImage\r\n=============================================*/\n\nexport let BackgroundImage = {\n  fnc: function () {\n    var databackground = $('[data-background]');\n    databackground.each(function () {\n      if ($(this).attr('data-background')) {\n        var image_path = $(this).attr('data-background');\n        $(this).css({\n          'background': 'url(' + image_path + ')'\n        });\n      }\n    });\n  }\n};\n\n/*=============================================\r\nCarouselNavigation\r\n=============================================*/\n\nexport let CarouselNavigation = {\n  fnc: function () {\n    var prevBtn = $('.ps-carousel__prev'),\n      nextBtn = $('.ps-carousel__next');\n    prevBtn.on('click', function (e) {\n      e.preventDefault();\n      var target = $(this).attr('href');\n      $(target).trigger('prev.owl.carousel', [1000]);\n    });\n    nextBtn.on('click', function (e) {\n      e.preventDefault();\n      var target = $(this).attr('href');\n      $(target).trigger('next.owl.carousel', [1000]);\n    });\n  }\n};\n\n/*=============================================\r\nSlickConfig\r\n=============================================*/\n\nexport let SlickConfig = {\n  fnc: function () {\n    var product = $('.ps-product--detail');\n    if (product.length > 0) {\n      var primary = product.find('.ps-product__gallery'),\n        second = product.find('.ps-product__variants'),\n        vertical = product.find('.ps-product__thumbnail').data('vertical');\n      primary.slick({\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        asNavFor: '.ps-product__variants',\n        fade: true,\n        dots: false,\n        infinite: false,\n        arrows: primary.data('arrow'),\n        prevArrow: \"<a href='#'><i class='fa fa-angle-left'></i></a>\",\n        nextArrow: \"<a href='#'><i class='fa fa-angle-right'></i></a>\"\n      });\n      second.slick({\n        slidesToShow: second.data('item'),\n        slidesToScroll: 1,\n        infinite: false,\n        arrows: second.data('arrow'),\n        focusOnSelect: true,\n        prevArrow: \"<a href='#'><i class='fa fa-angle-up'></i></a>\",\n        nextArrow: \"<a href='#'><i class='fa fa-angle-down'></i></a>\",\n        asNavFor: '.ps-product__gallery',\n        vertical: vertical,\n        responsive: [{\n          breakpoint: 1200,\n          settings: {\n            arrows: second.data('arrow'),\n            slidesToShow: 4,\n            vertical: false,\n            prevArrow: \"<a href='#'><i class='fa fa-angle-left'></i></a>\",\n            nextArrow: \"<a href='#'><i class='fa fa-angle-right'></i></a>\"\n          }\n        }, {\n          breakpoint: 992,\n          settings: {\n            arrows: second.data('arrow'),\n            slidesToShow: 4,\n            vertical: false,\n            prevArrow: \"<a href='#'><i class='fa fa-angle-left'></i></a>\",\n            nextArrow: \"<a href='#'><i class='fa fa-angle-right'></i></a>\"\n          }\n        }, {\n          breakpoint: 480,\n          settings: {\n            slidesToShow: 3,\n            vertical: false,\n            prevArrow: \"<a href='#'><i class='fa fa-angle-left'></i></a>\",\n            nextArrow: \"<a href='#'><i class='fa fa-angle-right'></i></a>\"\n          }\n        }]\n      });\n    }\n  }\n};\n\n/*=============================================\r\nProductLightbox\r\n=============================================*/\n\nexport let ProductLightbox = {\n  fnc: function () {\n    var product = $('.ps-product--detail');\n    if (product.length > 0) {\n      $('.ps-product__gallery').lightGallery({\n        selector: '.item a',\n        thumbnail: true,\n        share: false,\n        fullScreen: false,\n        autoplay: false,\n        autoplayControls: false,\n        actualSize: false\n      });\n      if (product.hasClass('ps-product--sticky')) {\n        $('.ps-product__thumbnail').lightGallery({\n          selector: '.item a',\n          thumbnail: true,\n          share: false,\n          fullScreen: false,\n          autoplay: false,\n          autoplayControls: false,\n          actualSize: false\n        });\n      }\n    }\n    $('.ps-gallery--image').lightGallery({\n      selector: '.ps-gallery__item',\n      thumbnail: true,\n      share: false,\n      fullScreen: false,\n      autoplay: false,\n      autoplayControls: false,\n      actualSize: false\n    });\n    $('.ps-video').lightGallery({\n      thumbnail: false,\n      share: false,\n      fullScreen: false,\n      autoplay: false,\n      autoplayControls: false,\n      actualSize: false\n    });\n  }\n};\n\n/*=============================================\r\nCountDown\r\n=============================================*/\n\nexport let CountDown = {\n  fnc: function () {\n    var time = $(\".ps-countdown\");\n    time.each(function () {\n      var el = $(this),\n        value = $(this).data('time');\n      var countDownDate = new Date(value).getTime();\n      var timeout = setInterval(function () {\n        var now = new Date().getTime(),\n          distance = countDownDate - now;\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24)),\n          hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n          minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60)),\n          seconds = Math.floor(distance % (1000 * 60) / 1000);\n        el.find('.days').html(days);\n        el.find('.hours').html(hours);\n        el.find('.minutes').html(minutes);\n        el.find('.seconds').html(seconds);\n        if (distance < 0) {\n          clearInterval(timeout);\n          el.closest('.ps-section').hide();\n        }\n      }, 1000);\n    });\n  }\n};\n\n/*=============================================\r\nRating\r\n=============================================*/\n\nexport let Rating = {\n  fnc: function () {\n    $('select.ps-rating').each(function () {\n      var readOnly;\n      if ($(this).attr('data-read-only') == 'true') {\n        readOnly = true;\n      } else {\n        readOnly = false;\n      }\n      $(this).barrating({\n        theme: 'fontawesome-stars',\n        readonly: readOnly,\n        emptyValue: '0'\n      });\n    });\n  }\n};\n\n/*=============================================\r\nProgressBar\r\n=============================================*/\n\nexport let ProgressBar = {\n  fnc: function () {\n    var progress = $('.ps-progress');\n    progress.each(function (e) {\n      var value = $(this).data('value');\n      $(this).find('span').css({\n        width: value + \"%\"\n      });\n    });\n  }\n};\n\n/*=============================================\r\nDinamicRating\r\n=============================================*/\n\nexport let DinamicRating = {\n  fnc: function (response) {\n    /*=============================================\r\n    Calculamos el total de las calificaciones de las reseÃ±as\r\n    =============================================*/\n\n    let totalReview = 0;\n    let rating = 0;\n    if (JSON.parse(response.reviews).length > 0) {\n      for (let i = 0; i < JSON.parse(response.reviews).length; i++) {\n        totalReview += Number(JSON.parse(response.reviews)[i][\"review\"]);\n      }\n      rating = Math.round(totalReview / JSON.parse(response.reviews).length);\n      return rating;\n    } else {\n      return 0;\n    }\n  }\n};\n\n/*=============================================\r\nDinamicReview\r\n=============================================*/\n\nexport let DinamicReviews = {\n  fnc: function (response) {\n    /*=============================================\r\n    Clasificamos la cantidad de estrellas segÃºn la calificaciÃ³n\r\n    =============================================*/\n\n    let reviews = [];\n    for (let r = 0; r < 5; r++) {\n      if (response > 0) {\n        if (response < r + 1) {\n          reviews[r] = 2;\n        } else {\n          reviews[r] = 1;\n        }\n      } else {\n        reviews = [0, 1, 1, 1, 1, 1];\n      }\n    }\n    return reviews;\n  }\n};\n\n/*=============================================\r\nDinamicPrice\r\n=============================================*/\n\nexport let DinamicPrice = {\n  fnc: function (response) {\n    let type;\n    let value;\n    let offer;\n    let price;\n    let disccount;\n    let arrayPrice = [];\n    let offerDate;\n    let today = new Date();\n    if (response.offer != \"\") {\n      offerDate = new Date(parseInt(JSON.parse(response.offer)[2].split(\"-\")[0]), parseInt(JSON.parse(response.offer)[2].split(\"-\")[1]) - 1, parseInt(JSON.parse(response.offer)[2].split(\"-\")[2]));\n      if (today < offerDate) {\n        type = JSON.parse(response.offer)[0];\n        value = JSON.parse(response.offer)[1];\n        if (type == \"Disccount\") {\n          offer = (response.price - response.price * value / 100).toFixed(2);\n        }\n        if (type == \"Fixed\") {\n          offer = value;\n          value = Math.round(offer * 100 / response.price);\n        }\n        disccount = `<div class=\"ps-product__badge\">-${value}%</div>`;\n        price = `<p class=\"ps-product__price sale\">$<span class=\"end-price\">${offer}</span> <del>$${response.price} </del></p>`;\n      } else {\n        price = `<p class=\"ps-product__price\">$<span class=\"end-price\">${response.price}</span></p>`;\n      }\n    } else {\n      price = `<p class=\"ps-product__price\">$<span class=\"end-price\">${response.price}</span></p>`;\n    }\n\n    /*=============================================\r\n    Definimos si el producto tiene stock\r\n    =============================================*/\n\n    if (response.stock == 0) {\n      disccount = `<div class=\"ps-product__badge out-stock\">Out Of Stock</div>`;\n    }\n    arrayPrice[0] = price;\n    arrayPrice[1] = disccount;\n    return arrayPrice;\n  }\n};\n\n/*=============================================\r\nPagination\r\n=============================================*/\nexport let Pagination = {\n  fnc: function () {\n    var target = $('.pagination');\n    if (target.length > 0) {\n      target.each(function () {\n        var tg = $(this),\n          totalPages = tg.data('total-pages'),\n          actualPage = tg.data('actual-page'),\n          currentRoute = tg.data('current-route');\n        tg.twbsPagination({\n          totalPages: totalPages,\n          startPage: actualPage,\n          visiblePages: 4,\n          first: \"First\",\n          last: \"Last\",\n          prev: '<i class=\"fas fa-angle-left\"></i>',\n          next: '<i class=\"fas fa-angle-right\"></i>'\n        }).on(\"page\", function (evt, page) {\n          window.location.href = currentRoute + \"&\" + page;\n        });\n      });\n    }\n  }\n};\n\n/*=============================================\r\nSelect2Cofig\r\n=============================================*/\nexport let Select2Cofig = {\n  fnc: function () {\n    $('select.ps-select').select2({\n      placeholder: $(this).data('placeholder'),\n      minimumResultsForSearch: -1\n    });\n  }\n};\n\n/*=============================================\r\nSearch\r\n=============================================*/\nexport let Search = {\n  fnc: function (response) {\n    var search = response.toLowerCase();\n    var match = /^[a-z0-9Ã±ÃÃ¡Ã©Ã­Ã³Ãº ]*$/;\n    if (match.test(search)) {\n      var searchTest = search.replace(/[ ]/g, \"_\");\n      searchTest = searchTest.replace(/[Ã±]/g, \"n\");\n      searchTest = searchTest.replace(/[Ã¡]/g, \"a\");\n      searchTest = searchTest.replace(/[Ã©]/g, \"e\");\n      searchTest = searchTest.replace(/[Ã­]/g, \"i\");\n      searchTest = searchTest.replace(/[Ã³]/g, \"o\");\n      searchTest = searchTest.replace(/[Ãº]/g, \"u\");\n      return searchTest;\n    }\n  }\n};\n\n/*=============================================\r\nTabs\r\n=============================================*/\nexport let Tabs = {\n  fnc: function () {\n    $('.ps-tab-list  li > a ').on('click', function (e) {\n      e.preventDefault();\n      var target = $(this).attr('href');\n      $(this).closest('li').siblings('li').removeClass('active');\n      $(this).closest('li').addClass('active');\n      $(target).addClass('active');\n      $(target).siblings('.ps-tab').removeClass('active');\n    });\n    $('.ps-tab-list.owl-slider .owl-item a').on('click', function (e) {\n      e.preventDefault();\n      var target = $(this).attr('href');\n      $(this).closest('.owl-item').siblings('.owl-item').removeClass('active');\n      $(this).closest('.owl-item').addClass('active');\n      $(target).addClass('active');\n      $(target).siblings('.ps-tab').removeClass('active');\n    });\n  }\n};\n\n/*=============================================\r\nQuantity\r\n=============================================*/\nexport let Quantity = {\n  fnc: function () {\n    $(\".quantity\").each(function () {\n      var spinner = $(this),\n        input = spinner.find('input[type=\"number\"]'),\n        btnUp = spinner.find('.up'),\n        btnDown = spinner.find('.down'),\n        min = input.attr(\"min\"),\n        max = input.attr(\"max\");\n      btnUp.click(function () {\n        var oldValue = parseInt(input.val());\n        if (oldValue >= max) {\n          var newVal = oldValue;\n        } else {\n          var newVal = oldValue + 1;\n        }\n        input.val(newVal);\n        input.trigger(\"change\");\n      });\n      btnDown.click(function () {\n        var oldValue = parseInt(input.val());\n        if (oldValue <= min) {\n          var newVal = oldValue;\n        } else {\n          var newVal = oldValue - 1;\n        }\n        input.val(newVal);\n        input.trigger(\"change\");\n      });\n    });\n  }\n};\n\n/*=============================================\r\nCapitalize\r\n=============================================*/\n\nexport let Capitalize = {\n  fnc: function (value) {\n    value = value.toLowerCase();\n    let names = value.split(' ');\n    names = names.map(name => {\n      return name[0].toUpperCase() + name.substr(1);\n    });\n    return names.join(' ');\n  }\n};\n\n/*=============================================\r\nSweetalert\r\n=============================================*/\n\nexport let Sweetalert = {\n  fnc: function (type, text, url) {\n    switch (type) {\n      case \"error\":\n        if (url == null) {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: text\n          });\n        } else {\n          Swal.fire({\n            icon: 'error',\n            title: 'Error',\n            text: text\n          }).then(result => {\n            if (result.value) {\n              window.open(url, \"_top\");\n            }\n          });\n        }\n        break;\n      case \"success\":\n        if (url == null) {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: text\n          });\n        } else {\n          Swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: text\n          }).then(result => {\n            if (result.value) {\n              window.open(url, \"_top\");\n            }\n          });\n        }\n        break;\n      case \"loading\":\n        Swal.fire({\n          allowOutsideClick: false,\n          icon: 'info',\n          text: text\n        });\n        Swal.showLoading();\n        break;\n      case \"html\":\n        Swal.fire({\n          allowOutsideClick: false,\n          title: 'Click to continue with the payment...',\n          icon: 'info',\n          html: text,\n          showConfirmButton: false,\n          showCancelButton: true,\n          cancelButtonColor: '#d33'\n        });\n        break;\n      case \"close\":\n        Swal.close();\n        break;\n    }\n  }\n};\n\n/*=============================================\r\nTooltip\r\n=============================================*/\n\nexport let Tooltip = {\n  fnc: function () {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n};\n\n/*=============================================\r\nPaypal\r\n=============================================*/\n\nexport let Paypal = {\n  fnc: function (price) {\n    return new Promise(resolve => {\n      paypal.Buttons({\n        createOrder: function (data, actions) {\n          // This function sets up the details of the transaction, including the amount and line item details.\n          return actions.order.create({\n            purchase_units: [{\n              amount: {\n                value: price\n              }\n            }]\n          });\n        },\n        onApprove: function (data, actions) {\n          // This function captures the funds from the transaction.\n          return actions.order.capture().then(function (details) {\n            if (details.status == \"COMPLETED\") {\n              localStorage.setItem(\"id_payment\", details.id);\n              resolve(true);\n            }\n          });\n        },\n        onCancel: function (data) {\n          resolve(false);\n        },\n        onError: function (err) {\n          resolve(false);\n        }\n      }).render('#paypal-button-container');\n    });\n  }\n};\n\n/*=============================================\r\nCreate URL\r\n=============================================*/\n\nexport let CreateUrl = {\n  fnc: function (value) {\n    value = value.toLowerCase();\n    value = value.replace(/[ ]/g, \"-\");\n    value = value.replace(/[Ã¡]/g, \"a\");\n    value = value.replace(/[Ã©]/g, \"e\");\n    value = value.replace(/[Ã­]/g, \"i\");\n    value = value.replace(/[Ã³]/g, \"o\");\n    value = value.replace(/[Ãº]/g, \"u\");\n    value = value.replace(/[Ã±]/g, \"n\");\n    return value;\n  }\n};\n\n/*=============================================\r\nDatepicker\r\n=============================================*/\n\nexport let Datepicker = {\n  fnc: function () {\n    $('.ps-datepicker.dateFrom').datepicker({\n      endDate: new Date(),\n      todayHighlight: true,\n      format: 'yyyy-mm-dd'\n    });\n    $('.ps-datepicker.dateFrom').change(function () {\n      $('.ps-datepicker.dateTo').attr(\"readonly\", false);\n      let dateFrom = $(this).val();\n      $('.ps-datepicker.dateTo').val(dateFrom);\n      $('.ps-datepicker.dateTo').datepicker({\n        startDate: dateFrom,\n        datesDisabled: dateFrom,\n        format: 'yyyy-mm-dd',\n        endDate: new Date(),\n        todayHighlight: true\n      });\n      if ($('.ps-datepicker.dateTo').val() != \"\") {\n        $(\".btnUpdate\").attr(\"href\", \"account/my-sales&\" + dateFrom + \"&\" + $('.ps-datepicker.dateTo').val());\n      }\n    });\n    $('.ps-datepicker.dateTo').change(function () {\n      $(\".btnUpdate\").attr(\"href\", \"account/my-sales&\" + $('.ps-datepicker.dateFrom').val() + \"&\" + $(this).val());\n    });\n  }\n};\n\n/*=============================================\r\nChartJs\r\n=============================================*/\n\nexport let ChartJs = {\n  fnc: function (config) {\n    let ctx = document.getElementById('line-chart').getContext('2d');\n    window.myLine = new Chart(ctx, config);\n  }\n};\n\n/*=============================================\r\nShare\r\n=============================================*/\n\nexport let Share = {\n  fnc: function () {\n    $('.social-share').shapeShare();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}